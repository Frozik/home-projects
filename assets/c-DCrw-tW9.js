import{r,ad as k,ae as y,i as p,a8 as L,u as w,af as A,J as d,ag as g,f as h}from"./e-2cnBJs5Z.js";import{u as S,D as C,b as v,L as O,c as b,a as D}from"./c-Dw9rWVI1.js";import{a as N}from"./c-ChrisUlg.js";import{selectLayout as T,updateLayout as x}from"./c-B9jusb7Q.js";import"./c-CDandAUu.js";import"./c-Bu6AjAki.js";import"./c-D5QiOfjF.js";import"./c-BEKdwVym.js";import"./c-GW558DHh.js";function _({onError:t,onRequest:s,onRelease:n}={}){const[c,a]=r.useState(),e=r.useRef(null),o=typeof window<"u"&&"wakeLock"in navigator,u=r.useCallback(async(l="screen")=>{const i=e.current!=null;if(!o)return console.warn("Calling the `request` function has no effect, Wake Lock Screen API isn't supported");if(i)return console.warn("Calling `request` multiple times without `release` has no effect");try{e.current=await navigator.wakeLock.request(l),e.current.onrelease=f=>{a(e.current&&e.current.released||!0),n==null||n(f),e.current=null},s==null||s(),a(e.current&&e.current.released||!1)}catch(f){t==null||t(f)}},[o,s,t,n]),m=r.useCallback(async()=>{var i;const l=e.current==null;if(!o)return console.warn("Calling the `release` function has no effect, Wake Lock Screen API isn't supported");if(l)return console.warn("Calling `release` before `request` has no effect.");await((i=e.current)==null?void 0:i.release())},[o]);return{isSupported:o,request:u,released:c,release:m,type:e.current&&e.current.type||void 0}}function M(t){const s=S();return r.useMemo(()=>t(s),[t,s])}function P(){const{request:t,release:s}=_();r.useEffect(()=>(t(),()=>void s()),[t,s])}const U="_container_lf352_1",W={container:U},z=r.memo(()=>{P();const{registerApi:t,resetApi:s}=M(D),n=k(),c=y(T),[a,e]=r.useState();r.useEffect(()=>{p(a)||a.fromJSON(L(c)?c.value:C)},[a,c]),r.useEffect(()=>{if(p(a))return;const u=a.onDidLayoutChange(()=>n(x(a.toJSON())));return()=>u.dispose()},[a,n]);const o=w(u=>{e(u.api),t(u.api)});return N(()=>s()),A(c)?d.jsx(g,{}):d.jsx(v,{className:h(W.container,"dockview-theme-abyss"),components:O,tabComponents:b,onReady:o,gap:4})});export{z as Pendulum};
